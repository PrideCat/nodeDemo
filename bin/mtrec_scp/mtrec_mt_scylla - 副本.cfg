# ========================================================
# Configuration File for iFLY Speech Recognizer
# 也可以不使用配置文件，直接用命令行搞定，格式如下：
# mtrec -c 50 -t 10 -s mtep.scp -g test.abnf -m -d D:/Projects/ISR/06.Development/Source/trunk/bin/wave/yp_wav
# mtrec -c 10 -t 1 -s mtrec_nbest_3_cm_600.scp -g 2000.abnf -d test_wave --mtperf-log mtperf_1_nbest3_cm600.log
# ========================================================

[common]
# 测试的根路径，该路径下的所有文件都会被测试，缺省为当前路径
root_dir		= ./mtrec_scp/wavon
#root_dir		= ./mtrec_scp/text
#root_dir		= ./mtrec_scp/hotworld_text
# 测试的文件列表文件，格式为每行一个文件名称，
# 如果文件列表里面是绝对路径直接使用，否则和上面的root_dir拼接起来
list_file = 

# 测试的并发线程数量，缺省为1
threads_count	= 1
# 测试的总次数，这个数字必须大于等于threads_count，缺省为1
loops_count		= 1
# 服务器地址，可以是IP地址和端口的形式
# 在IMS情况下，MRCP服务器的sip uri，应填写IP地址:端口号或主机名:端口号，例如192.168.77.205，缺省端口5060

server_addr		= 10.28.140.27:1028/iat/

#是否输出音频，0输出，1不输出，缺省为0
donot_logaudio = 
#appid
appid          =  pc20onli

#是否输出识别结果，0输出，1不输出，缺省为0
donot_nlplog   = 0


# 服务动态库，如果有多个，使用“,”分隔，如果路径中间存在空格，请增加引号
#svc_libs		= D:/iFly Info Tek/InterReco 4.5/bin/isr_rec.dll,D:/iFly Info Tek/InterReco 4.5/bin/isr_ep.dll
svc_libs		= mt_scylla
# 文件模式/目录模式
# 文件模式就是以目录下的一个音频文件为单位
# 而目录模式是以一个目录为单位进行，如果该目录下存在多个音频文件，则仅使用第一个发现的音频文件进行测试
# 缺省为false
file_mode		= true
# 是否效果分析模式，缺省为false
# 效果分析模式下，每个音频文件仅识别一次
# analyze_mode	= false
# 测试文件的过滤器
file_filter		=
# 缺省的测试脚本文件，如果没有找到对应的脚本文件，就会使用这里指定的配置文件

#scp_file		= ./mtrec_scp/mtrec_pers.scp
scp_file		= ./mtrec_scp/mtrec_mt_scylla.scp
#scp_file		= ./mtrec_scp/mtrec_iat_itr.scp
#scp_file		= ./mtrec_scp/mtrec_tts.scp
#scp_file		= ./mtrec_scp/mtrec_translate.scp
#scp_file		= ./mtrec_scp/mtrec_nlp_only.scp
#scp_file		= ./mtrec_scp/mtrec_thirdserver.scp
#scp_file		= ./mtrec_scp/mtrec_ivwrecord.scp
#scp_file		= ./mtrec_scp/mtrec_handle_audio.scp
#scp_file		= ./mtrec_scp/mtrec_nlp.scp
# 测试使用的主题，目前支持的有rec、ep、ims
# 如果没有指定scp文件，那么使用这里的主题
subject			= scylla
# 测试使用的标签，用于特别标识本次测试，用于记录
label			= 

[rec]
# 语法文件类型：string、uri，默认为uri
gr_type = 

# 缺省的语法文件，如果找不到和wav文件对应的语法文件，就使用这个语法文件
gr_file=

# 测试的语法文件列表，格式为每行一个语法文件名称（优先级低于gr_file）
gr_list			=  D:\ISR41问题跟踪\福建联通\福建联通优化20130425\grammar_list.txt
#./mtrec_scp/kw/gr.list
# 是否输入音频
input_wave = false
result_log = false
aqc_log = false

#result_type = json
result_type = plain
save_tts_pcm = true

#是否开启防串音
ct_test = false

#https证书路径，不传则走默认证书
ca_path = 

# 是否模拟录音，中间会暂停上次发送数据相应的时间，缺省为false
simulate_record = false
# 模拟时间比例，浮点参数，取值范围(0 - 1.0)，缺省0.8
record_ratio	= 

# 线程模式，缺省为0
# 仅进行一次Compute的单线程模式 = 0
# 每次AudioWrite后都进行一次Compute的单线程模式 = 1
# 在双线程模式下将会启动一个专门用于计算识别结果的线程 = 2
thread_mode		= 2

# 缺省音频格式，在读取的wave没有头的情况下使用这个格式
# 目前支持的有audio/L16;rate=8000(缺省，8K16bitPCM)、audio/basic(8KuLaw)、audio/x-alaw-basic(8KaLaw)
audio_type		= 

# 是否预读取音频数据，缺省为false
# 这个选项用于消除每次测试时需要读取音频文件的IO开销
preload_wave	= true

# 添加的头静音长度（单位：毫秒），缺省为0
head_silence	= 

# epread使用的缓冲区尺寸和epwrite缓冲区尺寸的比例
# 缺省为2
eprw_ratio		= 

# 运行日志
[run_logger]
file			= ../log/mtrec.log
output			= 3
# none, low, normal, detail, all
level			=  7

# 性能日志
[perf_logger]
file			= ../log/mtperf.log
output			= 
# none, low, normal, detail, all
level			= 

# 函数响应时间日志
[resp_logger]
file			= ../log/mtresp.log

# 效果分数日志
[resp_logger]
file			= ../log/mtresp.log
